generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Reviews {
  id        String   @id @default(cuid())
  rating    Int
  review    String
  lawyerId  String
  clientId  String
  createdAt DateTime @default(now())
  lawyer    Lawyer   @relation(fields: [lawyerId], references: [lawyerId], onDelete: Cascade)
  client    User     @relation(fields: [clientId], references: [id], onDelete: Cascade)
}

model Order {
  id            String      @id @default(cuid())
  lawyerId      String
  clientId      String
  createdAt     DateTime    @default(now())
  price         Int
  transactionId String      @default("")
  orderStatus   OrderStatus @default(PENDING)
  client        User        @relation(fields: [clientId], references: [id])
  lawyer        Lawyer      @relation(fields: [lawyerId], references: [id])
}

model Lawyer {
  id           String    @id @default(cuid())
  lawyerId     String    @unique
  institution  String
  course       String
  experience   Int
  description  String
  rating       Int?      @default(0)
  country      String
  expertise    String
  services     String[]
  state        String
  numofreviews Int?      @default(0)
  image        String?
  price        Int       @default(0)
  language     Language  @default(ENGLISH)
  lawyer       User      @relation(fields: [lawyerId], references: [id], onDelete: Cascade)
  orders       Order[]
  reviews      Reviews[]
}

enum Language {
  ENGLISH
  SPANISH
  FRENCH
  GERMAN
  ITALIAN
  PORTUGUESE
  RUSSIAN
  CHINESE
  JAPANESE
  ARABIC
  HINDI
  KOREAN
  TURKISH
  VIETNAMESE
  THAI
  INDONESIAN
  MALAY
  URDU
  BENGALI
  PERSIAN
  DUTCH
  POLISH
  SWEDISH
  FINNISH
  DANISH
  NORWEGIAN
  CZECH
  ROMANIAN
  HUNGARIAN
  GREEK
  BULGARIAN
  SERBIAN
  CROATIAN
  SLOVENIAN
  MACEDONIAN
  SLOVAK
  MALTESE
  CATALAN
  ICELANDIC
  WELSH
  BASQUE
  GALICIAN
  SCOTS_GAELIC
  MALAGASY
  MAORI
  TAMIL
  TELUGU
  KANNADA
  MALAYALAM
  SINHALESE
  BURMESE
  KHMER
  LAO
  TIBETAN
  MONGOLIAN
  DZONGKHA
  GEORGIAN
  ARMENIAN
  AZERBAIJANI
  YIDDISH
  KURDISH
  HEBREW
  UIGHUR
  URUMCHI
  KAZAKH
  TATAR
  UZBEK
  TURKMEN
  KYRGYZ
  TAJIK
  PUNJABI
  GUJARATI
  ORIYA
  ASSAMESE
  MARATHI
  SANSKRIT
  MANDARIN
  CANTONESE
  HAKKA
  XHOSA
  ZULU
  AFRIKAANS
  SWAHILI
  SOMALI
  LUXEMBOURGISH
  LINGALA
  KINYARWANDA
  TSWANA
  NYANJA
  KIRUNDI
  VIET
}

model User {
  id            String    @id @default(cuid())
  firstName     String
  lastName      String
  username      String    @unique
  email         String    @unique
  password      String?
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  role          Role      @default(USER)
  balance       Int       @default(0)
  language      Language  @default(ENGLISH)
  accounts      Account[]
  lawyer        Lawyer?
  orders        Order[]
  sessions      Session[]
  reviews       Reviews[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum OrderStatus {
  PENDING
  CANCELLED
  CONFORMED
}

enum Role {
  USER
  LAWYER
  ADMIN
}
